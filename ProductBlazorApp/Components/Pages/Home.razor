@using System.Net.Http
@using System.Text.Json
@using System.Text


@page "/"
@rendermode InteractiveServer
@inject HttpClient HttpClient

<PageTitle>Product - List</PageTitle>
<div class="container">
    <h3>Create Product</h3>
    <div class="row">
        <div class="col-md-4">
            <label>Name</label>
            <input @bind="NewProduct.Name" class="form-control" type="text" />
        </div>
        <div class="col-md-4">
            <label>Brand</label>
            <input @bind="NewProduct.Brand" class="form-control" type="text" />
        </div>
        <div class="col-md-4">
            <label>Category</label>
            <input @bind="NewProduct.Category" class="form-control" type="text" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <label>Price</label>
            <input @bind="NewProduct.Price" class="form-control" type="number" step="0.01" />
        </div>
        <div class="col-md-4">
            <label>Description</label>
            <input @bind="NewProduct.Description" class="form-control" type="text" />
        </div>

        <div class="col-md-4">
        <button class="btn btn-primary mt-3" @onclick="CreateProduct">Save</button>
        </div>
    </div>



    @if (showSuccessMessage)
    {
        <div class="alert alert-success mt-3" role="alert">
            Product saved successfully!
        </div>
    }

    <div class="row mt-3">
        <div class="card">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Brand</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Description</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Products)
                    {
                        <tr>
                            <td>@product.Name</td>
                            <td>@product.Brand</td>
                            <td>@product.Category</td>
                            <td>@product.Price</td>
                            <td>@product.Description</td>
                            <td>
                                <button class="btn btn-primary" type="button">Edit</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


 @code {
    private string apiUrl = "https://localhost:7295/api/Products/api/products/create";
    private List<Product> Products { get; set; } = new List<Product>();
    private ProductDto NewProduct = new ProductDto();
    private bool showSuccessMessage = false;

    private async Task CreateProduct()
    {
        try
        {
            var json = JsonSerializer.Serialize(NewProduct);
            var content = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await HttpClient.PostAsync(apiUrl, content);

            if (response.IsSuccessStatusCode)
            {
                 
                showSuccessMessage = true;
                NewProduct = new ProductDto();  
                await FetchData();  
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
       
            }
        }
        catch (Exception ex)
        {
 
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    public HttpClient httpClient = new HttpClient();

    public async Task FetchData()
    {
        Products = await httpClient.GetFromJsonAsync<List<Product>>("https://localhost:7295/api/products");
    }

    public class ProductDto
    {
        public string Name { get; set; }
        public string Brand { get; set; }
        public string Category { get; set; }
        public decimal Price { get; set; }
        public string Description { get; set; }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Brand { get; set; } = "";
        public string Category { get; set; } = "";
        public decimal Price { get; set; }
        public string Description { get; set; } = "";
        public DateTime CreatedAt { get; set; }
    }
}
